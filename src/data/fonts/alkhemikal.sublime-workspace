{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inven",
				"inventory"
			],
			[
				"equi",
				"equipped_sword_two"
			],
			[
				"sword",
				"sword_two_dst"
			],
			[
				"equipp",
				"equipped_sword_two"
			],
			[
				"TILE_S",
				"TILE_SIZE"
			],
			[
				"item_",
				"item_id"
			],
			[
				"unique",
				"unique_id"
			],
			[
				"game_i",
				"game_items"
			],
			[
				"game_",
				"game_items"
			],
			[
				"TILE",
				"TILE_FLOOR_STONE"
			],
			[
				"CONSOLE",
				"CONSOLE_MESSAGE_COUNT"
			],
			[
				"GAME",
				"GAME_ITEMS_COUNT"
			],
			[
				"prin",
				"plot_straight_line"
			],
			[
				"statisti",
				"statistics_offset"
			],
			[
				"hp",
				"hp_bar"
			],
			[
				"statis",
				"statistics_offset"
			],
			[
				"numbe",
				"number_id"
			],
			[
				"print",
				"printf"
			],
			[
				"numb",
				"number_id"
			],
			[
				"player_inven",
				"player_inventory_highlight_index"
			],
			[
				"game_item",
				"game_items"
			],
			[
				"item_ti",
				"item_tileset_tex"
			],
			[
				"item",
				"item_id"
			],
			[
				"game_items",
				"game_items"
			],
			[
				"TILE_",
				"TILE_SIZE"
			],
			[
				"current",
				"current_char"
			],
			[
				"curren",
				"current_char"
			],
			[
				"SDLK_",
				"SDLK_ESCAPE"
			],
			[
				"displa",
				"display_inventory"
			],
			[
				"game_s",
				"game_is_running"
			],
			[
				"conf_var",
				"conf_var_u"
			],
			[
				"conf_get",
				"conf_get_int"
			],
			[
				"conf_ge",
				"conf_get_var"
			],
			[
				"conf_ty",
				"conf_type_string"
			],
			[
				"conf_type",
				"conf_type_int"
			],
			[
				"conf_var_",
				"conf_var_union_t"
			],
			[
				"config",
				"config_vars"
			],
			[
				"confi",
				"config_vars"
			],
			[
				"type",
				"typedef"
			],
			[
				"token",
				"token_count"
			],
			[
				"file",
				"filepath"
			],
			[
				"player_inventory_",
				"player_inventory_current_item_amount"
			],
			[
				"payer",
				"player"
			],
			[
				"player_",
				"player_inventory_highlight_index"
			],
			[
				"player_in",
				"player_inventory_highlight_index"
			],
			[
				"player",
				"player_inventory_current_item_amount"
			],
			[
				"player_inve",
				"player_inventory_highlight_index"
			],
			[
				"palyer_in",
				"player_inventory_highlight_index"
			],
			[
				"plater",
				"player_inventory_highlight_index"
			],
			[
				"game_ite",
				"game_items"
			],
			[
				"game",
				"game_items"
			],
			[
				"SDL_Ren",
				"SDL_Renderer"
			],
			[
				"player_hp_",
				"player_hp_icon_tex"
			],
			[
				"inventory_high",
				"inventory_highlight_y"
			],
			[
				"WINDOW_",
				"WINDOW_HEIGHT"
			],
			[
				"WINDOW",
				"WINDOW_WIDTH"
			],
			[
				"curre",
				"current"
			],
			[
				"entit",
				"entity"
			],
			[
				"stat",
				"statistics_y"
			],
			[
				"item_name",
				"item_name"
			],
			[
				"COLOR_TE",
				"COLOR_TEXT_WHITE"
			],
			[
				"SDL_TE",
				"SDL_Texture"
			],
			[
				"console",
				"console_tex"
			],
			[
				"player_tile",
				"player_tileset_tex"
			],
			[
				"atlas",
				"atlas"
			],
			[
				"font_",
				"font_metrics_t"
			],
			[
				"curn",
				"current_char"
			],
			[
				"text_",
				"text_wrap_amount"
			],
			[
				"glyph",
				"glyph_surface"
			],
			[
				"font_inven",
				"font_inventory"
			],
			[
				"font_consol",
				"font_console_glyph_atlas"
			],
			[
				"SDL_Redner",
				"SDL_Renderer"
			],
			[
				"font_con",
				"font_console_glyph_atlas"
			],
			[
				"message_pos_",
				"message_pos_offset"
			],
			[
				"message_pos",
				"message_pos_y"
			],
			[
				"message_",
				"message_pos_x"
			],
			[
				"hex",
				"hex_color"
			],
			[
				"wrap",
				"wrap_width"
			],
			[
				"char_",
				"char_amount"
			],
			[
				"initial",
				"initial_x"
			],
			[
				"curr",
				"current_char"
			],
			[
				"currne",
				"current_char"
			],
			[
				"SDL_Re",
				"SDL_Rect"
			],
			[
				"char",
				"char_pointer"
			],
			[
				"glyp",
				"glyph_atlas"
			],
			[
				"SDL_Surfac",
				"SDL_Surface"
			],
			[
				"WINDO",
				"WINDOW_HEIGHT"
			],
			[
				"SDL_Surface",
				"SDL_FreeSurface"
			],
			[
				"array",
				"array_index"
			],
			[
				"arra",
				"array_index"
			],
			[
				"gly",
				"glyph_cache"
			],
			[
				"item_win",
				"item_window_pos_y"
			],
			[
				"item_window",
				"item_window_pos_y_offset"
			],
			[
				"item_window_pos",
				"item_window_pos_y"
			],
			[
				"item_window_posy",
				"item_window_pos_y_offset"
			],
			[
				"item_windo",
				"item_window_pos_y"
			],
			[
				"itme_wind",
				"item_window_pos_x"
			],
			[
				"player_inv",
				"player_inventory_current_item_amount"
			],
			[
				"inventory_",
				"inventory_highlight_index"
			],
			[
				"inventory",
				"inventory_highlight_index"
			],
			[
				"item_name_po",
				"item_name_pos_x"
			],
			[
				"SDL_Dest",
				"SDL_DestroyTexture"
			],
			[
				"playe",
				"player_inventory_highlight_tex"
			],
			[
				"TIOLE",
				"TILE_WALL_STONE"
			],
			[
				"update_",
				"update_logic"
			],
			[
				"update",
				"update_the_game"
			],
			[
				"map",
				"map_pitch"
			],
			[
				"TILE_DOOR",
				"TILE_DOOR_CLOSED"
			],
			[
				"TILE_FLOOR",
				"TILE_FLOOR_STONE"
			],
			[
				"text_he",
				"text_hex_color"
			],
			[
				"COLOR",
				"COLOR_TEXT_WHITE"
			],
			[
				"invenot",
				"inventory_font"
			],
			[
				"SDL_render",
				"SDL_RenderCopy"
			],
			[
				"render_tex",
				"render_text"
			],
			[
				"inventory_te",
				"inventory_text_pos_x"
			],
			[
				"invento",
				"inventory_font"
			],
			[
				"SDL_Create",
				"SDL_CreateTextureFromSurface"
			],
			[
				"SDL_Desto",
				"SDL_DestroyTexture"
			],
			[
				"itemset",
				"itemset_tex"
			],
			[
				"ITEM",
				"ITEM_INFO_AMOUNT"
			],
			[
				"display",
				"display_height"
			],
			[
				"displ",
				"display_inventory"
			],
			[
				"TILE_D",
				"TILE_DEBUGGING"
			],
			[
				"start_",
				"start_x"
			],
			[
				"star",
				"start_y"
			],
			[
				"TILE_SA",
				"TILE_STAIRS_DOWN"
			],
			[
				"TILE_STA",
				"TILE_STAIRS_UP"
			],
			[
				"TILESTA",
				"TILE_STAIRS_UP"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/C99/C99.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 178.0,
		"last_filter": "menu",
		"selected_items":
		[
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remove pack",
				"Package Control: Remove Package"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"vmen",
				"View: Toggle Menu"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instlal",
				"Package Control: Install Package"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			],
			[
				"minimap",
				"View: Toggle Minimap"
			],
			[
				"Package Control: Install Pa",
				"Package Control: Install Package"
			]
		],
		"width": 493.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
			"make",
			"asd",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"clear",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"PlainTasks",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"hi",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rami/Desktop/moonbreathmountain/src/inc/types.h",
		"/home/rami/Desktop/moonbreathmountain/src/makefile",
		"/home/rami/Desktop/moonbreathmountain/src/inc/tiles.h",
		"/home/rami/Desktop/moonbreathmountain/src/level_generation.c",
		"/home/rami/Desktop/moonbreathmountain/src/inc/level_generation.h",
		"/home/rami/Desktop/moonbreathmountain/src/inc/util_io.h",
		"/home/rami/Desktop/moonbreathmountain/src/util_conf.c",
		"/home/rami/Desktop/moonbreathmountain/src/inc/util_conf.h",
		"/home/rami/Desktop/moonbreathmountain/src/moonbreath_mountain.c",
		"/home/rami/Desktop/moonbreathmountain/src/inc/moonbreath_mountain.h",
		"/home/rami/Desktop/moonbreathmountain/src/game.c",
		"/home/rami/Desktop/moonbreathmountain/src/data/items.cfg",
		"/home/rami/.config/sublime-text-3/Packages/User/full_build.sublime-build",
		"/home/rami/Desktop/moonbreathmountain/src/Makefile",
		"/home/rami/Desktop/NTETRIS/src/Makefile",
		"/home/rami/Desktop/NPONG/src/Makefile",
		"/home/rami/Desktop/moonbreathmountain/src/build/out",
		"/home/rami/Desktop/moonbreathmountain/src/inc/dungeon_generation.h",
		"/home/rami/Desktop/moonbreathmountain/src/dungeon_generation.c",
		"/home/rami/.Xdefaults",
		"/home/rami/.Xre",
		"/home/rami/Desktop/moonbreathmountain/src/inc/structs.h",
		"/home/rami/Desktop/frozengl/src/test.c",
		"/home/rami/Desktop/frozengl/src/io.h",
		"/home/rami/Desktop/moonbreathmountain/src/inc/items.cfg",
		"/home/rami/Desktop/moonbreathmountain/src/main.c",
		"/home/rami/Desktop/moonbreathmountain/src/.gitignore",
		"/home/rami/Desktop/moonbreathmountain/src/inc/game.h",
		"/home/rami/Desktop/cross-platform-test/code/linux_game.c",
		"/home/rami/Desktop/cross-platform-test/code/build.sh",
		"/home/rami/Desktop/cross-platform-test/build.sh",
		"/home/rami/Desktop/cross-platform-test/main.c",
		"/home/rami/Desktop/cross-platform-test/Makefile",
		"/home/rami/Downloads/linux_day_012/sdl_handmade.cpp",
		"/home/rami/Downloads/linux_day_012/build.sh",
		"/home/rami/Downloads/linux_day_012.tar.gz",
		"/home/rami/Desktop/moonbreathmountain/src/util_conf.h",
		"/home/rami/Desktop/moonbreathmountain/src/util_io.h",
		"/home/rami/Desktop/moonbreathmountain/src/inc/io.h",
		"/home/rami/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/rami/Desktop/moonbreathmountain/src/items.cfg",
		"/home/rami/Desktop/operating_system_practice/main.c",
		"/home/rami/Desktop/operating_system_practice/hi",
		"/home/rami/Desktop/operating_system_practice/bootloader.asm",
		"/home/rami/Desktop/operating_system_practice/test.asm",
		"/home/rami/Desktop/hamxe/src/Makefile",
		"/home/rami/Desktop/hamxe/src/dungeon_generation.c",
		"/home/rami/Desktop/hamxe/src/inc/dungeon_generation.h",
		"/home/rami/Desktop/hamxe/src/inc/tiles.h",
		"/home/rami/Desktop/hamxe/src/inc/structs.h",
		"/home/rami/Desktop/hamxe/src/inc/game.h",
		"/home/rami/Desktop/hamxe/src/game.c",
		"/home/rami/Desktop/hamxe/src/main.c",
		"/home/rami/Desktop/hamxe-master/src/game.c",
		"/home/rami/Desktop/NPONG/src/npong.c",
		"/home/rami/Desktop/NPONG/src/inc/npong.h",
		"/home/rami/Desktop/NPONG/src/main.c",
		"/home/rami/.PlayOnLinux/wineprefix/eq/drive_c/Program Files/Sony/EverQuest/eqclient.ini",
		"/home/rami/Desktop/hamxe/src/hamxe.h",
		"/home/rami/Desktop/alakajam3/src/dungeon_generation.c",
		"/home/rami/Desktop/alakajam3/src/inc/dungeon_generation.h",
		"/home/rami/Desktop/alakajam3/src/hamxe.h",
		"/home/rami/Desktop/alakajam3/src/hamxe.c",
		"/home/rami/Desktop/alakajam3/src/main.c",
		"/home/rami/Desktop/alakajam3/src/dungeon_generation.h",
		"/home/rami/Desktop/testing/main.c",
		"/home/rami/Desktop/NTETRIS/src/ntetris.c",
		"/home/rami/Desktop/NTETRIS/src/main.c",
		"/home/rami/Desktop/testing_shit/main.c",
		"/home/rami/Desktop/alakajam3/src/main",
		"/home/rami/Desktop/random_rooms/main.c",
		"/home/rami/Desktop/NPONG/README.md",
		"/home/rami/Desktop/NTETRIS/README.md",
		"/home/rami/Desktop/NTETRIS/src/inc/ntetris.h",
		"/home/rami/Desktop/NPONG/src/.gitignore",
		"/home/rami/Desktop/alakajam3/src/Makefile",
		"/home/rami/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/rami/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/rami/Desktop/NPONG/npong.c",
		"/home/rami/Desktop/OS/loader.s",
		"/home/rami/Desktop/OS/linker.ld",
		"/home/rami/Desktop/OS/kernel.s",
		"/home/rami/Desktop/OS/kernel.asm",
		"/home/rami/Desktop/pong/pong.c",
		"/home/rami/Desktop/Untitled Folder/pong.c",
		"/home/rami/Desktop/folder/src/main.c",
		"/home/rami/Desktop/folder/src/inc/hd_console.h",
		"/home/rami/Desktop/folder/src/inc/type.h",
		"/home/rami/.config/sublime-text-3/Packages/EasyMotion/README.md",
		"/home/rami/.config/sublime-text-3/Packages/PlainTasks/messages/Tutorial.todo",
		"/home/rami/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/rami/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/rami/.config/sublime-text-3/Packages/zzz A File Icon zzz/patches/general/multi/My.sublime-theme",
		"/home/rami/Desktop/folder/src/inc/console.h",
		"/home/rami/Desktop/folder/src/pt_console.h",
		"/home/rami/Desktop/folder/src/pt_console.c",
		"/home/rami/Desktop/frozengl/src/shader.h",
		"/home/rami/Desktop/hamxe/src/player.c",
		"/home/rami/.config/sublime-text-3/Packages/C99/messages/install.txt",
		"/home/rami/.config/sublime-text-3/Packages/C99/C99.sublime-settings",
		"/home/rami/.config/sublime-text-3/Packages/User/C99.sublime-settings",
		"/home/rami/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/rami/Desktop/asdasdasas",
		"/home/rami/.config/sublime-text-3/Packages/PlainTasks/PlainTasks (Linux).sublime-settings",
		"/home/rami/Desktop/test.c",
		"/home/rami/.config/sublime-text-3/Packages/DocBlockr/README.md",
		"/home/rami/Desktop/hamxe/src/inc/typedefinitions.h",
		"/home/rami/Desktop/hamxe/src/inc/map.h",
		"/home/rami/Desktop/hamxe/src/inc/fov.h",
		"/home/rami/Desktop/hamxe/src/inc/player.h",
		"/home/rami/Desktop/hamxe/src/inc/monsters.h",
		"/home/rami/Desktop/hamxe/src/inc/screen.h",
		"/home/rami/Desktop/hamxe/src/inc/combat.h",
		"/home/rami/Desktop/hamxe/src/inc/level_generation.h",
		"/home/rami/Desktop/frozengl/io.h",
		"/home/rami/Desktop/hamxe/src/map.c",
		"/home/rami/Desktop/hamxe/src/screen.c",
		"/home/rami/Desktop/hamxe/src/fov.c",
		"/home/rami/Desktop/hamxe/src/combat.c",
		"/home/rami/Desktop/hamxe/src/monsters.c",
		"/home/rami/Desktop/hamxe/src/level_generation.c",
		"/home/rami/Desktop/octetbot/src/octetbot.c",
		"/home/rami/Desktop/assembly/NASM/record-library.asm",
		"/home/rami/Desktop/assembly/NASM/test.asm",
		"/home/rami/Desktop/assembly/NASM/linux.asm",
		"/home/rami/Desktop/assembly/NASM/write_and_read.asm",
		"/home/rami/Desktop/assembly/GAS/heydiddle.s",
		"/home/rami/Desktop/assembly/NASM/heydiddle.asm"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"load_texture",
			"// NOTE(Rami): !!!",
			"tiledungeon_tex",
			"tile_dungeon_tex",
			"renderer",
			"game_exit(SDL_Window *window, SDL_Renderer *renderer, ",
			"game_init(SDL_Window **window, SDL_Renderer **renderer, ",
			"renderer",
			"render_level(SDL_Renderer *renderer, ",
			"load_texture(SDL_Renderer *renderer, ",
			"render_player(SDL_Renderer *renderer, ",
			"renderer",
			"render_interface(SDL_Renderer *renderer, ",
			"renderer",
			"render_items(SDL_Renderer *renderer, ",
			"renderer",
			"render_inventory(SDL_Renderer *renderer, ",
			"create_font_atlas(SDL_Renderer *renderer, ",
			"render_inventory(SDL_Renderer *renderer, ",
			"render_text(renderer, ",
			"render_text",
			"text_color",
			"render_txt",
			"render_text",
			"add_console_msg",
			"entity_t *player",
			"player->",
			"player->entity",
			"new_player",
			"flee the",
			"dungeon_level",
			"random_int",
			"random",
			"dungeon",
			"dungeon_",
			"dungeon_level_height",
			"dungeon_level_width",
			"dungeon_level_pitch",
			"dungeon",
			"MAP_SIZE",
			"dungeon_size",
			"MAP_SIZE",
			"map_size",
			"map",
			"dungeon_size",
			"map",
			"place_corridors",
			"UP",
			"entity_move(",
			"*game_is_running",
			"path",
			"TILE_STAIRS_UP",
			"TILE_STAIRS_DOWN",
			"TILE_PATH_UP",
			"TILE_STAIRS_UP",
			"map",
			"entity_move",
			"you equip",
			"you pick up",
			"sprintf(damage, \"%d Damage\", game_items_info[index].damage);\n",
			"you equip",
			"sprintf",
			"you equip",
			"sprintf",
			"rand",
			"you pick up",
			"\n      ",
			"isspace",
			"is_number",
			"DEPS",
			"equipped",
			"conf.vars[0",
			"char *token = strtok(str, \"=\\n\");",
			"char *token = strtok(str, \" =\\n\");",
			"\" =\\n\"",
			"int t = 0;",
			"int i = 0;",
			"int i = 0",
			"token = strtok(NULL, \" =\\n\");",
			"token = strtok(NULL, \"=\\n\");",
			"strtok",
			"while token not NULL",
			"dst",
			"dest",
			"char_amount",
			"item_name_index",
			"'",
			"glyph_tex",
			"glyph_surface",
			"new_tex",
			"surface",
			"create_",
			"note",
			".cfg",
			"while(token)",
			"// while tokens not NULL",
			"while(token)",
			"keep toke",
			"conf",
			"printf(\"key_value",
			"debug",
			"conf->length",
			"conf->length =",
			"debug",
			"conf_get_var",
			"tiles",
			"492",
			"item window",
			"free",
			"success",
			"io_read_file",
			"conf_load",
			"conf_free",
			"conf_load",
			"static",
			"conf_load",
			"player",
			"io_read_file",
			"io_read",
			"conf_get_var",
			"conf_get_car",
			"conf_load",
			"is_number",
			"conf_free",
			"io_read",
			"init_data_arrays",
			"could not load textures",
			"sdl could not create a "
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"game_exit(",
			"game_init(",
			"render_level(",
			"load_texture(",
			"render_player(",
			"render_interface(",
			"render_items(",
			"render_inventory(",
			"create_font_atlas(",
			"render_inventory(",
			"render_text(",
			"player_t *player",
			"player.",
			"player",
			"level",
			"rand_int",
			"level_",
			"level_height",
			"dungeon_level_height",
			"level_width",
			"level_pitch",
			"dungeon_level",
			"DUNGEON_SIZE",
			"dungeon_size",
			"dungeon",
			"TILE_PATH_UP",
			"TILE_PATH_DOWN",
			"TILE_PATH_UP",
			"add_inventory_item",
			"drop_inventory_item",
			"item_win_offset",
			"item_win_y",
			"item_win_x",
			"inv_hl_x",
			"inv_hl_y",
			"_COUNT",
			"inventory_add_item",
			"inventory_drop_item",
			"stats_offset",
			"stats_y",
			"stats_x",
			"rand_room_x",
			"rand_room_y",
			"interface_stats_tex",
			"inv_item_tex",
			"add_console_msg",
			"text_color",
			"inv_item_count",
			"inv_hl_index",
			"font_inv",
			"inv_item_tex",
			"inv_hl_tex",
			"inv_tex",
			"fov",
			"SDLK",
			"if(",
			"while(",
			"for(",
			"int",
			"buff",
			"conf_vars",
			"conf_var_u",
			"conf_var_t",
			"conf_vars_t",
			"conf_vars_u",
			"conf_var_u",
			"CONSOLE_COLOR_SPECIAL",
			"CONSOLE_COLOR_ACTION",
			"TEXT_COLOR_YELLOW",
			"TEXT_COLOR_ORANGE",
			"TEXT_COLOR_GREEN",
			"TEXT_COLOR_WHITE",
			"char",
			"52",
			"font_text",
			"font_item",
			"font_console",
			"font_inventory",
			"font_console",
			"font_inventory",
			"player_inventory_highlight_index",
			"update_logic = 1;",
			"message_pos_offset",
			"TILE_FLOOR_STONE",
			"* map_pitch +",
			"fov_map",
			"current_",
			"game_is_running",
			"unsigned char",
			"room_count",
			"user_input",
			"0.0002",
			"0",
			"1",
			"int",
			"current_piece",
			"mvwaddstr",
			"game_win",
			"screen",
			"SCREEN_COLUMNS",
			"SCREEN_ROWS",
			"dest_rect",
			"inverted_src_a",
			"SCREEN_HEIGHT",
			"SCREEN_WIDTH",
			"compile_log",
			"file",
			"s8",
			"new_x",
			"new_y",
			"->x",
			"player_move",
			"pushl",
			"popl",
			"pushl",
			"MAP_WIDTH",
			"MAP_HEIGHT",
			"u32",
			"i32",
			"u32",
			"i32",
			"rooms_counter",
			"LEVEL_WIDTH",
			"LEVEL_HEIGHT",
			"LEVEL_WIDTH",
			"LEVEL_HEIGHT",
			"FF0000",
			"uint32_t"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/full_build.sublime-build",
	"project": "alkhemikal.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/moonbreathmountain/src/game.c"
			],
			[
				"gmae",
				"~/Desktop/moonbreathmountain/src/game.c"
			],
			[
				"game",
				"~/Desktop/hamxe/src/game.c"
			],
			[
				"dungeon",
				"~/Desktop/hamxe/src/dungeon_generation.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 400.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
